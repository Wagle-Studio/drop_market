image: php:8.3-cli

stages:
  - test
  - push_staging

test:
  stage: test
  before_script:
    # Update package list and install required system dependencies for the PHP environment.
    - apt-get update && apt-get install -y curl git unzip zip libzip-dev zlib1g-dev default-mysql-client wget lsof firefox-esr
    # Install necessary PHP extensions for the project (ZIP handling, PDO for MySQL).
    - docker-php-ext-install zip pdo pdo_mysql
    # Install Xdebug for debugging and enable the extension in the PHP configuration.
    - pecl install xdebug && docker-php-ext-enable xdebug
    # Download and install Composer globally for managing PHP dependencies.
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
    # Download and install GeckoDriver for E2E tests.
    - wget -q -O /tmp/geckodriver.tar.gz https://github.com/mozilla/geckodriver/releases/download/v0.33.0/geckodriver-v0.33.0-linux64.tar.gz
    - tar -xzf /tmp/geckodriver.tar.gz -C /usr/local/bin
    - chmod +x /usr/local/bin/geckodriver
  script:
    - cd app
    # Copy the default test environment configuration and create a local override file.
    - cp .env.test .env.test.local
    # Update the database name in the test environment configuration file.
    - sed -i "s#^DATABASE_NAME=.*#DATABASE_NAME=${TEST_DB_NAME}#" .env.test.local
    # Update the database connection string to use SQLite in the test environment configuration file.
    - sed -i "s#^DATABASE_URL=.*#DATABASE_URL=sqlite:///%kernel.project_dir%/var/${TEST_DB_NAME}#" .env.test.local
    # Install project dependencies defined in composer.json.
    - composer install
    # Ensure that shell scripts in the ./scripts directory have the correct execution permissions.
    - chmod 770 ./scripts/*.sh
    # Execute the full test suite including database creation and seeding.
    - composer test_full
  only:
    - master

push_into_staging:
  image: alpine:latest
  stage: push_into_staging
  before_script:
    - apk add --no-cache git
  script:
    # Fetch and switch to the master branch to push the code to the staging branch.
    - git fetch origin master:master
    - git checkout master
    - git push -u --force "https://gitlab-ci-token:${STAGING_ROBOT_TOKEN}@gitlab.com/kevin.wolff/wgls_pages.git" master:staging
  only:
    - master